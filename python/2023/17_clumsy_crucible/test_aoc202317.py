"""Tests for AoC 17, 2023: Clumsy Crucible."""

# Standard library imports
import pathlib

# Third party imports
import aoc202317
import pytest

PUZZLE_DIR = pathlib.Path(__file__).parent


@pytest.fixture
def example1():
    puzzle_input = (PUZZLE_DIR / "example1.txt").read_text().rstrip()
    return aoc202317.parse_data(puzzle_input)


@pytest.fixture
def example2():
    puzzle_input = (PUZZLE_DIR / "example2.txt").read_text().rstrip()
    return aoc202317.parse_data(puzzle_input)


def test_parse_example1(example1):
    """Test that input is parsed properly."""
    assert example1 == {
        (0, 0): 2,
        (0, 1): 4,
        (0, 2): 1,
        (0, 3): 3,
        (0, 4): 4,
        (0, 5): 3,
        (0, 6): 2,
        (0, 7): 3,
        (0, 8): 1,
        (0, 9): 1,
        (0, 10): 3,
        (0, 11): 2,
        (0, 12): 3,
        (1, 0): 3,
        (1, 1): 2,
        (1, 2): 1,
        (1, 3): 5,
        (1, 4): 4,
        (1, 5): 5,
        (1, 6): 3,
        (1, 7): 5,
        (1, 8): 3,
        (1, 9): 5,
        (1, 10): 6,
        (1, 11): 2,
        (1, 12): 3,
        (2, 0): 3,
        (2, 1): 2,
        (2, 2): 5,
        (2, 3): 5,
        (2, 4): 2,
        (2, 5): 4,
        (2, 6): 5,
        (2, 7): 6,
        (2, 8): 5,
        (2, 9): 4,
        (2, 10): 2,
        (2, 11): 5,
        (2, 12): 4,
        (3, 0): 3,
        (3, 1): 4,
        (3, 2): 4,
        (3, 3): 6,
        (3, 4): 5,
        (3, 5): 8,
        (3, 6): 5,
        (3, 7): 8,
        (3, 8): 4,
        (3, 9): 5,
        (3, 10): 4,
        (3, 11): 5,
        (3, 12): 2,
        (4, 0): 4,
        (4, 1): 5,
        (4, 2): 4,
        (4, 3): 6,
        (4, 4): 6,
        (4, 5): 5,
        (4, 6): 7,
        (4, 7): 8,
        (4, 8): 6,
        (4, 9): 7,
        (4, 10): 5,
        (4, 11): 3,
        (4, 12): 6,
        (5, 0): 1,
        (5, 1): 4,
        (5, 2): 3,
        (5, 3): 8,
        (5, 4): 5,
        (5, 5): 9,
        (5, 6): 8,
        (5, 7): 7,
        (5, 8): 9,
        (5, 9): 8,
        (5, 10): 4,
        (5, 11): 5,
        (5, 12): 4,
        (6, 0): 4,
        (6, 1): 4,
        (6, 2): 5,
        (6, 3): 7,
        (6, 4): 8,
        (6, 5): 7,
        (6, 6): 6,
        (6, 7): 9,
        (6, 8): 8,
        (6, 9): 7,
        (6, 10): 7,
        (6, 11): 6,
        (6, 12): 6,
        (7, 0): 3,
        (7, 1): 6,
        (7, 2): 3,
        (7, 3): 7,
        (7, 4): 8,
        (7, 5): 7,
        (7, 6): 7,
        (7, 7): 9,
        (7, 8): 7,
        (7, 9): 9,
        (7, 10): 6,
        (7, 11): 5,
        (7, 12): 3,
        (8, 0): 4,
        (8, 1): 6,
        (8, 2): 5,
        (8, 3): 4,
        (8, 4): 9,
        (8, 5): 6,
        (8, 6): 7,
        (8, 7): 9,
        (8, 8): 8,
        (8, 9): 6,
        (8, 10): 8,
        (8, 11): 8,
        (8, 12): 7,
        (9, 0): 4,
        (9, 1): 5,
        (9, 2): 6,
        (9, 3): 4,
        (9, 4): 6,
        (9, 5): 7,
        (9, 6): 9,
        (9, 7): 9,
        (9, 8): 8,
        (9, 9): 6,
        (9, 10): 4,
        (9, 11): 5,
        (9, 12): 3,
        (10, 0): 1,
        (10, 1): 2,
        (10, 2): 2,
        (10, 3): 4,
        (10, 4): 6,
        (10, 5): 8,
        (10, 6): 6,
        (10, 7): 8,
        (10, 8): 6,
        (10, 9): 5,
        (10, 10): 5,
        (10, 11): 6,
        (10, 12): 3,
        (11, 0): 2,
        (11, 1): 5,
        (11, 2): 4,
        (11, 3): 6,
        (11, 4): 5,
        (11, 5): 4,
        (11, 6): 8,
        (11, 7): 8,
        (11, 8): 8,
        (11, 9): 7,
        (11, 10): 7,
        (11, 11): 3,
        (11, 12): 5,
        (12, 0): 4,
        (12, 1): 3,
        (12, 2): 2,
        (12, 3): 2,
        (12, 4): 6,
        (12, 5): 7,
        (12, 6): 4,
        (12, 7): 6,
        (12, 8): 5,
        (12, 9): 5,
        (12, 10): 5,
        (12, 11): 3,
        (12, 12): 3,
    }


def test_part1_example1(example1):
    """Test part 1 on example input."""
    assert aoc202317.part1(example1) == 102


def test_part2_example1(example1):
    """Test part 2 on example input."""
    assert aoc202317.part2(example1) == 94


def test_part2_example2(example2):
    """Test part 2 on example input."""
    assert aoc202317.part2(example2) == 71
